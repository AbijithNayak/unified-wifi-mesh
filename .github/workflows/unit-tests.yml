name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Unit-Tests:
    name: Unit Tests (OpenSSL ${{ matrix.openssl-version }})
    strategy:
      matrix:
        openssl-version: ['1.1', '3.0']
        include:
          - openssl-version: '1.1'
            container: 'ubuntu:20.04'
            setup-cmd: 'apt-get update && apt-get install -y libssl1.1 libssl-dev'
          - openssl-version: '3.0'
            container: 'ubuntu:latest'
            setup-cmd: 'apt-get update && apt-get install -y libssl-dev'
    
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
    
    steps:
    - name: Setup container environment
      run: |
        # Set non-interactive mode for apt
        export DEBIAN_FRONTEND=noninteractive
        
        apt-get update
        apt-get install -y git
        
        # Create a fake sudo command
        echo '#!/bin/bash' > /usr/bin/sudo
        echo 'export DEBIAN_FRONTEND=noninteractive; exec "$@"' >> /usr/bin/sudo
        chmod +x /usr/bin/sudo
        
        ${{ matrix.setup-cmd }}
    
    - name: Check OpenSSL version
      run: openssl version
    
    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        path: 'unified-wifi-mesh'

    - name: Clone OneWiFi repository
      run: |
        mkdir -p easymesh_project
        git clone https://github.com/rdkcentral/OneWifi.git easymesh_project/OneWifi
        mv unified-wifi-mesh easymesh_project/unified-wifi-mesh

    - name: Set up dependencies
      run: |
        # Ensure non-interactive installation
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install -y build-essential \
                                cmake \
                                python3 \
                                python3-pip \
                                git \
                                vim \
                                libev-dev \
                                libjansson-dev \
                                zlib1g-dev \
                                libnl-3-dev \
                                libnl-genl-3-dev \
                                libnl-route-3-dev \
                                libavro-dev \
                                libcjson1 libcjson-dev \
                                uuid-dev \
                                libmysqlcppconn-dev \
                                libreadline-dev \
                                iptables \
                                mariadb-server \
                                gnupg \
                                file \
                                golang

    - name: Setup OneWiFi
      working-directory: easymesh_project/OneWifi
      run: |
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
        make -f build/linux/makefile setup
      env:
        GITHUB_ACTOR: ${{ github.actor }}

    - name: Build - OneWiFi
      working-directory: easymesh_project/OneWifi
      continue-on-error: true
      run: make -j -f build/linux/makefile all
      
    - name: Confirm Linking - Controller
      working-directory: easymesh_project/OneWifi
      run: make -f build/linux/makefile all

    - name: Install GTest
      working-directory: easymesh_project/unified-wifi-mesh/
      timeout-minutes: 5 
      run: |
        make -C build/ctrl install_gtest

    - name: Make test
      working-directory: easymesh_project/unified-wifi-mesh/
      timeout-minutes: 5 
      run: |
        make -j -C build/ctrl test

